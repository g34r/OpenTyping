<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AppDesc" xml:space="preserve">
    <value>OpenSource Mordern Keyboard Typing Trainer</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>OpenTyping</value>
  </data>
  <data name="ArtPrac" xml:space="preserve">
    <value>Long sentences</value>
  </data>
  <data name="ArtPracDesc" xml:space="preserve">
    <value>Practice with one long sentence</value>
  </data>
  <data name="AvgCorrect" xml:space="preserve">
    <value>Average accuracy</value>
  </data>
  <data name="AvgSpeed" xml:space="preserve">
    <value>Average speed</value>
  </data>
  <data name="Correct" xml:space="preserve">
    <value>Accuracy</value>
  </data>
  <data name="CurKeyboard" xml:space="preserve">
    <value>Current Keyboard</value>
  </data>
  <data name="CurPracData" xml:space="preserve">
    <value>Current sentences</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="ErrMsg1" xml:space="preserve">
    <value>Please select 2 or more keys to practice</value>
  </data>
  <data name="ErrMsg10" xml:space="preserve">
    <value>Duplicate names exist</value>
  </data>
  <data name="ErrMsg11" xml:space="preserve">
    <value>No Name field.</value>
  </data>
  <data name="ErrMsg12" xml:space="preserve">
    <value>No KeyLayoutData field.</value>
  </data>
  <data name="ErrMsg13" xml:space="preserve">
    <value>No Character field.</value>
  </data>
  <data name="ErrMsg14" xml:space="preserve">
    <value>TextData field size is 0.</value>
  </data>
  <data name="ErrMsg15" xml:space="preserve">
    <value>Doesn't exist TextData field.</value>
  </data>
  <data name="ErrMsg16" xml:space="preserve">
    <value>Column of numbers</value>
  </data>
  <data name="ErrMsg17" xml:space="preserve">
    <value>First row</value>
  </data>
  <data name="ErrMsg18" xml:space="preserve">
    <value>Second row</value>
  </data>
  <data name="ErrMsg19" xml:space="preserve">
    <value>Third row</value>
  </data>
  <data name="ErrMsg2" xml:space="preserve">
    <value>A file with the same name already exists in the Keyboard data path.</value>
  </data>
  <data name="ErrMsg20" xml:space="preserve">
    <value>Number of key is </value>
  </data>
  <data name="ErrMsg21" xml:space="preserve">
    <value>need, but </value>
  </data>
  <data name="ErrMsg22" xml:space="preserve">
    <value>does not match </value>
  </data>
  <data name="ErrMsg3" xml:space="preserve">
    <value>A file with the same name already exists in the practice data path.</value>
  </data>
  <data name="ErrMsg4" xml:space="preserve">
    <value>Cannot be deleted because only one keyboard data exists.</value>
  </data>
  <data name="ErrMsg5" xml:space="preserve">
    <value>Cannot be deleted because only one practice data exists.</value>
  </data>
  <data name="ErrMsg6" xml:space="preserve">
    <value>The number of Hangul syllables in the file is one or less.</value>
  </data>
  <data name="ErrMsg7" xml:space="preserve">
    <value>An error occurred while locating the application path.</value>
  </data>
  <data name="ErrMsg8" xml:space="preserve">
    <value>Cannot find keyborad data file. Please create keyboard data in that
    path and try again.</value>
  </data>
  <data name="ErrMsg9" xml:space="preserve">
    <value>Cannot fidn practice data file. Please create practice data in that path and try again.</value>
  </data>
  <data name="ExceptShftKey" xml:space="preserve">
    <value>Excluding upper key(Shift)</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="InfoMsg1" xml:space="preserve">
    <value>Select practice data you want to practice.</value>
  </data>
  <data name="InitStatInfo" xml:space="preserve">
    <value>Reset statistic information</value>
  </data>
  <data name="InPage" xml:space="preserve">
    <value> of pages</value>
  </data>
  <data name="KeyDataFile" xml:space="preserve">
    <value>Keyboard File data</value>
  </data>
  <data name="KeyDataOpen" xml:space="preserve">
    <value>Open Keyboard File</value>
  </data>
  <data name="KeyDataPath" xml:space="preserve">
    <value>Keyboard layout path</value>
  </data>
  <data name="KeyPrac" xml:space="preserve">
    <value>Keys</value>
  </data>
  <data name="KeyPracDesc" xml:space="preserve">
    <value>Practice the position of each key on the keyboard.</value>
  </data>
  <data name="KeyPracHelp" xml:space="preserve">
    <value>Click the position of the key you want to practice on/off.</value>
  </data>
  <data name="Korean" xml:space="preserve">
    <value>Korean</value>
  </data>
  <data name="MostWrongKey" xml:space="preserve">
    <value>Most mistyped key</value>
  </data>
  <data name="NumPracSen" xml:space="preserve">
    <value>Number of sentence practiced</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PracDataFile" xml:space="preserve">
    <value>Practice Data File</value>
  </data>
  <data name="PracDataPath" xml:space="preserve">
    <value>Sentences path</value>
  </data>
  <data name="RanSenLoc" xml:space="preserve">
    <value>Random arrangement of sentences</value>
  </data>
  <data name="SenPrac" xml:space="preserve">
    <value>Sentences</value>
  </data>
  <data name="SenPracDesc" xml:space="preserve">
    <value>Practice by dividing it into short sentences</value>
  </data>
  <data name="SenPracHelp" xml:space="preserve">
    <value>Select the sentence you want to practice by clicking on it.</value>
  </data>
  <data name="SetKeyboard" xml:space="preserve">
    <value>Keyboard layout</value>
  </data>
  <data name="SetPracData" xml:space="preserve">
    <value>Sentences</value>
  </data>
  <data name="SetProgramLang" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="Speed" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="StartPrac" xml:space="preserve">
    <value>Start practice</value>
  </data>
  <data name="SylPrac" xml:space="preserve">
    <value>Syllables</value>
  </data>
  <data name="SylPracDesc" xml:space="preserve">
    <value>Practice by entering syllable units (Korean only) </value>
  </data>
  <data name="SylPracHelp" xml:space="preserve">
    <value>2350 characters are practiced with the most frequently used in modern Hangul</value>
  </data>
  <data name="Uzbek" xml:space="preserve">
    <value>O'zbek</value>
  </data>
  <data name="WarnMsg1" xml:space="preserve">
    <value>Selected keyboard data</value>
  </data>
  <data name="WarnMsg2" xml:space="preserve">
    <value>Selected practice data</value>
  </data>
  <data name="WarnMsg3" xml:space="preserve">
    <value>Are you sure you want to delete?</value>
  </data>
  <data name="WarnMsg4" xml:space="preserve">
    <value>Are you sure you want to delete statistical information?</value>
  </data>
  <data name="ErrMsg23" xml:space="preserve">
    <value>Forth row</value>
  </data>
  <data name="Char11722" xml:space="preserve">
    <value>11172 Charaters</value>
  </data>
  <data name="Char2350" xml:space="preserve">
    <value>2350 Characters</value>
  </data>
  <data name="FinishedPrac" xml:space="preserve">
    <value>Practice is finished.</value>
  </data>
  <data name="LastSpeed" xml:space="preserve">
    <value>Your last speed:</value>
  </data>
  <data name="UserDefined" xml:space="preserve">
    <value>User defined</value>
  </data>
</root>